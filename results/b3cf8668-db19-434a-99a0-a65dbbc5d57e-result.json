{"name": "To check google dlp can detect the Last Name in the text for name Allen", "status": "failed", "statusDetails": {"message": "AssertionError: KeyError('findings')\nassert False", "trace": "last_name = 'Allen'\n\n    @allure.title(\"To check google dlp can detect the Last Name in the text for name {last_name}\")\n    @pytest.mark.parametrize(\"last_name\", last_name_list)\n    def test_check_google_dlp_can_detect_last_name(last_name):\n        try:\n            response = DLPDataService.post_dlp_data_service(last_name)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                logger.info(f'Google_DLP_Service response code is 200 and response is {response.text}')\n                # get the json response from the api\n                json_response = response.json()\n>               expect(json_response['result']['findings'][0]['infoType']['name'] == \"PERSON_NAME\")\nE               KeyError: 'findings'\n\ntest/test_name_info_type.py:48: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nlast_name = 'Allen'\n\n    @allure.title(\"To check google dlp can detect the Last Name in the text for name {last_name}\")\n    @pytest.mark.parametrize(\"last_name\", last_name_list)\n    def test_check_google_dlp_can_detect_last_name(last_name):\n        try:\n            response = DLPDataService.post_dlp_data_service(last_name)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                logger.info(f'Google_DLP_Service response code is 200 and response is {response.text}')\n                # get the json response from the api\n                json_response = response.json()\n                expect(json_response['result']['findings'][0]['infoType']['name'] == \"PERSON_NAME\")\n                expect(json_response['result']['findings'][0]['likelihood'] == \"POSSIBLE\")\n                assert_expectations()\n                logger.info(\n                    f\"To check google dlp can detect the last Name in the text for name {last_name} test case is passed \")\n    \n        except Exception as e:\n            logger.error(e)\n            logger.error(\n                f\"To check google dlp can detect the last Name in the text for name {last_name} test case is Failed \")\n    \n>           assert False, e\nE           AssertionError: KeyError('findings')\nE           assert False\n\ntest/test_name_info_type.py:59: AssertionError"}, "steps": [{"name": "Calling Google DLP POSTS API with id: 'Allen' ", "status": "passed", "steps": [{"name": "Getting the base url for api", "status": "passed", "start": 1630873864354, "stop": 1630873864354}, {"name": "Log request Data for service 'Google DLP Service'", "status": "passed", "parameters": [{"name": "url", "value": "'https://dlp.googleapis.com/v2/projects/qe-assignment/content:inspect?key=AIzaSyBwdXHzGzCuPmlNzN2VQUl_g5ILsqBZW6g'"}, {"name": "header", "value": "{'Content-Type': 'application/json', 'charset': 'UTF-8'}"}, {"name": "service_name", "value": "'Google DLP Service'"}], "start": 1630873864354, "stop": 1630873864355}, {"name": "reading the json from file : 'DLP_Post.json' with dictionary: {'text': 'Allen'}", "status": "passed", "parameters": [{"name": "filename", "value": "'DLP_Post.json'"}, {"name": "d", "value": "{'text': 'Allen'}"}], "start": 1630873864355, "stop": 1630873864355}], "parameters": [{"name": "text", "value": "'Allen'"}], "start": 1630873864353, "stop": 1630873864827}, {"name": "Log response Data for service 'Google_DLP_Service'", "status": "passed", "parameters": [{"name": "service_name", "value": "'Google_DLP_Service'"}, {"name": "response", "value": "<Response [200]>"}], "start": 1630873864827, "stop": 1630873864830}], "attachments": [{"name": "log", "source": "cb8721b9-eb9b-48f1-a8bc-6320bde26f96-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "last_name", "value": "'Allen'"}], "start": 1630873864353, "stop": 1630873864831, "uuid": "5772c926-3173-4432-9da9-3d4cb63c3308", "historyId": "cecb6935939a127a1d833b982bc724a9", "testCaseId": "3f28b9fcefcdb45f0a32ad9c862ad3f2", "fullName": "test.test_name_info_type#test_check_google_dlp_can_detect_last_name", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_name_info_type"}, {"name": "host", "value": "LPBR394-NITINSINGH"}, {"name": "thread", "value": "18188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_name_info_type"}]}