{"name": "To verify that Google DLP can detect  Domain Name in the text message. ", "status": "failed", "statusDetails": {"message": "AssertionError: AssertionError(\"KeyError('findings')\n  assert False\")\nassert False", "trace": "scenario = 'To verify that Google DLP can detect  Domain Name in the text message. ', text = 'www.amazon.com', likelihood = 'LIKELY', infoType = 'DOMAIN_NAME'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n>                   expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\nE                   KeyError: 'findings'\n\ntest/test_dlp_posts_service.py:229: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nscenario = 'To verify that Google DLP can detect  Domain Name in the text message. ', text = 'www.amazon.com', likelihood = 'LIKELY', infoType = 'DOMAIN_NAME'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n                    expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\n                    expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n                    assert_expectations()\n                    logger.info(f'{scenario} is Passed')\n                except Exception as e:\n                    logger.error(f'{scenario} is Failed')\n>                   assert False, e\nE                   AssertionError: KeyError('findings')\nE                   assert False\n\ntest/test_dlp_posts_service.py:235: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nscenario = 'To verify that Google DLP can detect  Domain Name in the text message. ', text = 'www.amazon.com', likelihood = 'LIKELY', infoType = 'DOMAIN_NAME'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n                    expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\n                    expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n                    assert_expectations()\n                    logger.info(f'{scenario} is Passed')\n                except Exception as e:\n                    logger.error(f'{scenario} is Failed')\n                    assert False, e\n            else:\n                logger.error(f'Response Text is {response.text}')\n                logger.error(f'{scenario} is Failed')\n                assert False, f\"Status Code is {response.status_code} and response text is {response.text}\"\n        except Exception as e:\n            logger.error(f'{scenario} is Failed')\n            logger.error(f'Error message is: {e}')\n>           assert False, e\nE           AssertionError: AssertionError(\"KeyError('findings')\nE             assert False\")\nE           assert False\n\ntest/test_dlp_posts_service.py:243: AssertionError"}, "steps": [{"name": "Calling Google DLP POSTS API with id: 'www.amazon.com' ", "status": "passed", "steps": [{"name": "Getting the base url for api", "status": "passed", "start": 1630873705667, "stop": 1630873705668}, {"name": "Log request Data for service 'Google DLP Service'", "status": "passed", "parameters": [{"name": "url", "value": "'https://dlp.googleapis.com/v2/projects/qe-assignment/content:inspect?key=AIzaSyBwdXHzGzCuPmlNzN2VQUl_g5ILsqBZW6g'"}, {"name": "header", "value": "{'Content-Type': 'application/json', 'charset': 'UTF-8'}"}, {"name": "service_name", "value": "'Google DLP Service'"}], "start": 1630873705668, "stop": 1630873705668}, {"name": "reading the json from file : 'DLP_Post.json' with dictionary: {'text': 'www.amazon.com'}", "status": "passed", "parameters": [{"name": "filename", "value": "'DLP_Post.json'"}, {"name": "d", "value": "{'text': 'www.amazon.com'}"}], "start": 1630873705668, "stop": 1630873705669}], "parameters": [{"name": "text", "value": "'www.amazon.com'"}], "start": 1630873705667, "stop": 1630873706141}, {"name": "Log response Data for service 'Google_DLP_Service'", "status": "passed", "parameters": [{"name": "service_name", "value": "'Google_DLP_Service'"}, {"name": "response", "value": "<Response [200]>"}], "start": 1630873706141, "stop": 1630873706144}], "attachments": [{"name": "log", "source": "fd2d23bc-e52e-4f69-9100-2f942bbcb6c9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scenario", "value": "'To verify that Google DLP can detect  Domain Name in the text message. '"}, {"name": "text", "value": "'www.amazon.com'"}, {"name": "likelihood", "value": "'LIKELY'"}, {"name": "infoType", "value": "'DOMAIN_NAME'"}], "start": 1630873705667, "stop": 1630873706147, "uuid": "f697d9bb-d788-4db5-b034-3bebb5e47dcf", "historyId": "c752a88358a26221f4ba5aaf3ae052d1", "testCaseId": "f8224f3864d3f37fe794bed6312f267a", "fullName": "test.test_dlp_posts_service#test_google_dlp_verify_scenario_false_positive_detection", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_dlp_posts_service"}, {"name": "host", "value": "LPBR394-NITINSINGH"}, {"name": "thread", "value": "18188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_dlp_posts_service"}]}