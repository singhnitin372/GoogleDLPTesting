{"name": "To verify that Google DLP can detect IBAN Code in the text message. ", "status": "failed", "statusDetails": {"message": "AssertionError: AssertionError('AssertionError(\\'\\\\x1b[93m\n    \n    assert_expectations() called at\\\\x1b[0m\n    \\\\x1b[4m\\\\x1b[94m\"/home/n...    expect(json_response[\\\\\\'result\\\\\\'][\\\\\\'findings\\\\\\'][0][\\\\\\'likelihood\\\\\\'] == likelihood)\n    \\')\n  assert False')\nassert False", "trace": "scenario = 'To verify that Google DLP can detect IBAN Code in the text message. ', text = 'Norway: NO 93 8601 1117947', likelihood = 'LIKELY', infoType = 'IBAN_CODE'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n                    expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\n                    expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n>                   assert_expectations()\n\ntest/test_dlp_posts_service.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def assert_expectations():\n        'raise an assert if there are any failed expectations'\n        if _failed_expectations:\n>           assert False, _report_failures()\nE           AssertionError: \u001b[93m\nE           \nE           assert_expectations() called at\u001b[0m\nE           \u001b[4m\u001b[94m\"/home/nitin-singh/PycharmProjects/DLPTest/test/test_dlp_posts_service.py:231\"\u001b[0m\u001b[93m in test_google_dlp_verify_scenario_false_positive_detection()\nE           \nE           \u001b[91m\u001b[4mFailed Expectations : 2\nE           \u001b[0m\nE           1: \u001b[91mFailed at \"\u001b[0m\u001b[94m\u001b[4m/home/nitin-singh/PycharmProjects/DLPTest/test/test_dlp_posts_service.py:229\u001b[0m\u001b[91m\", in test_google_dlp_verify_scenario_false_positive_detection()\nE           \t\u001b[1m\u001b[4mErrorMessage:\u001b[0m\u001b[91m\tNone\u001b[0m\nE                           expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\nE           \nE           2: \u001b[91mFailed at \"\u001b[0m\u001b[94m\u001b[4m/home/nitin-singh/PycharmProjects/DLPTest/test/test_dlp_posts_service.py:230\u001b[0m\u001b[91m\", in test_google_dlp_verify_scenario_false_positive_detection()\nE           \t\u001b[1m\u001b[4mErrorMessage:\u001b[0m\u001b[91m\tNone\u001b[0m\nE                           expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n\nvenv/lib/python3.8/site-packages/delayed_assert/delayed_assert.py:74: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nscenario = 'To verify that Google DLP can detect IBAN Code in the text message. ', text = 'Norway: NO 93 8601 1117947', likelihood = 'LIKELY', infoType = 'IBAN_CODE'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n                    expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\n                    expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n                    assert_expectations()\n                    logger.info(f'{scenario} is Passed')\n                except Exception as e:\n                    logger.error(f'{scenario} is Failed')\n>                   assert False, e\nE                   AssertionError: AssertionError('\\x1b[93m\nE                     \nE                     assert_expectations() called at\\x1b[0m\nE                     \\x1b[4m\\x1b[94m\"/home/nitin-singh/PycharmProjects/...[91m\\tNone\\x1b[0m\nE                                     expect(json_response[\\'result\\'][\\'findings\\'][0][\\'likelihood\\'] == likelihood)\nE                     ')\nE                   assert False\n\ntest/test_dlp_posts_service.py:235: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nscenario = 'To verify that Google DLP can detect IBAN Code in the text message. ', text = 'Norway: NO 93 8601 1117947', likelihood = 'LIKELY', infoType = 'IBAN_CODE'\n\n    @allure.title(\"{scenario}\")\n    @pytest.mark.parametrize(\"scenario,text,likelihood,infoType\", false_positive_detection_data_parametrize())\n    def test_google_dlp_verify_scenario_false_positive_detection(scenario, text, likelihood, infoType):\n        try:\n            response = DLPDataService.post_dlp_data_service(text)\n            log_response_data.from_reponse('Google_DLP_Service', response)\n            if response.status_code == 200:\n                try:\n                    json_response = response.json()\n                    expect(json_response['result']['findings'][0]['infoType']['name'] == infoType)\n                    expect(json_response['result']['findings'][0]['likelihood'] == likelihood)\n                    assert_expectations()\n                    logger.info(f'{scenario} is Passed')\n                except Exception as e:\n                    logger.error(f'{scenario} is Failed')\n                    assert False, e\n            else:\n                logger.error(f'Response Text is {response.text}')\n                logger.error(f'{scenario} is Failed')\n                assert False, f\"Status Code is {response.status_code} and response text is {response.text}\"\n        except Exception as e:\n            logger.error(f'{scenario} is Failed')\n            logger.error(f'Error message is: {e}')\n>           assert False, e\nE           AssertionError: AssertionError('AssertionError(\\'\\\\x1b[93m\nE               \nE               assert_expectations() called at\\\\x1b[0m\nE               \\\\x1b[4m\\\\x1b[94m\"/home/n...    expect(json_response[\\\\\\'result\\\\\\'][\\\\\\'findings\\\\\\'][0][\\\\\\'likelihood\\\\\\'] == likelihood)\nE               \\')\nE             assert False')\nE           assert False\n\ntest/test_dlp_posts_service.py:243: AssertionError"}, "steps": [{"name": "Calling Google DLP POSTS API with id: 'Norway: NO 93 8601 1117947' ", "status": "passed", "steps": [{"name": "Getting the base url for api", "status": "passed", "start": 1630873706169, "stop": 1630873706170}, {"name": "Log request Data for service 'Google DLP Service'", "status": "passed", "parameters": [{"name": "url", "value": "'https://dlp.googleapis.com/v2/projects/qe-assignment/content:inspect?key=AIzaSyBwdXHzGzCuPmlNzN2VQUl_g5ILsqBZW6g'"}, {"name": "header", "value": "{'Content-Type': 'application/json', 'charset': 'UTF-8'}"}, {"name": "service_name", "value": "'Google DLP Service'"}], "start": 1630873706170, "stop": 1630873706170}, {"name": "reading the json from file : 'DLP_Post.json' with dictionary: {'text': 'Norway: NO 93 8601 1117947'}", "status": "passed", "parameters": [{"name": "filename", "value": "'DLP_Post.json'"}, {"name": "d", "value": "{'text': 'Norway: NO 93 8601 1117947'}"}], "start": 1630873706171, "stop": 1630873706171}], "parameters": [{"name": "text", "value": "'Norway: NO 93 8601 1117947'"}], "start": 1630873706169, "stop": 1630873706678}, {"name": "Log response Data for service 'Google_DLP_Service'", "status": "passed", "parameters": [{"name": "service_name", "value": "'Google_DLP_Service'"}, {"name": "response", "value": "<Response [200]>"}], "start": 1630873706679, "stop": 1630873706684}], "attachments": [{"name": "log", "source": "355122c2-dbda-4f67-bd88-59ec4010b010-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "scenario", "value": "'To verify that Google DLP can detect IBAN Code in the text message. '"}, {"name": "text", "value": "'Norway: NO 93 8601 1117947'"}, {"name": "likelihood", "value": "'LIKELY'"}, {"name": "infoType", "value": "'IBAN_CODE'"}], "start": 1630873706169, "stop": 1630873706699, "uuid": "2b2fd051-a485-42df-9db9-220b882313dc", "historyId": "1e49f09836d1801047a113620fffa65e", "testCaseId": "f8224f3864d3f37fe794bed6312f267a", "fullName": "test.test_dlp_posts_service#test_google_dlp_verify_scenario_false_positive_detection", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_dlp_posts_service"}, {"name": "host", "value": "LPBR394-NITINSINGH"}, {"name": "thread", "value": "18188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_dlp_posts_service"}]}